.cardContainer {
  perspective: var(--perspective);
  width: var(--card-width);
  height: var(--card-height);
  margin: 20px;
}

.card {
  position: relative;
  width: 100%;
  height: 100%;
  border-radius: 15px;
  overflow: hidden;
  transform-style: preserve-3d;
  transition: transform var(--transition-time) ease;
  box-shadow: 0 10px 20px rgba(0, 0, 0, 0.2);
  cursor: pointer;
}

.cardBackground {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-size: cover;
  background-position: center;
  transform: translateZ(-10px);
  transition: all var(--transition-time) ease;
}

.playerImage {
  position: absolute;
  width: 90%;
  height: auto;
  bottom: 0;
  left: 50%;
  transform: translateX(-50%) translateZ(0);
  transition: all var(--transition-time) ease;
  transform-origin: bottom center;
}

.cardContent {
  position: absolute;
  bottom: 0;
  left: 0;
  width: 100%;
  padding: 20px;
  background: linear-gradient(to top, rgba(0,0,0,0.8), transparent);
  color: white;
  transform: translateZ(5px);
  transition: all var(--transition-time) ease;
}

/* Efeito Hover */
.card:hover {
  transform: rotateX(5deg) rotateY(5deg) translateY(-10px);
}

.card:hover .playerImage {
  transform: translateX(-50%) translateY(calc(-1 * var(--hover-lift))) translateZ(50px) scale(1.1);
  filter: drop-shadow(0 0 15px var(--shadow-color));
}

.card:hover .cardBackground {
  filter: blur(3px) brightness(0.7);
  transform: translateZ(-20px) scale(1.1);
}

.card:hover .cardContent {
  transform: translateZ(30px);
}

/* Efeito de movimento 3D baseado na posição do mouse */
.card.moving {
  transition: none;
}

.card.moving .playerImage,
.card.moving .cardBackground,
.card.moving .cardContent {
  transition: none;
}

/* Tema escuro */
[data-theme="dark"] .cardContent {
  background: linear-gradient(to top, rgba(0,0,0,0.9), transparent);
}

[data-theme="dark"] .card:hover .playerImage {
  filter: drop-shadow(0 0 15px var(--three-color));
}